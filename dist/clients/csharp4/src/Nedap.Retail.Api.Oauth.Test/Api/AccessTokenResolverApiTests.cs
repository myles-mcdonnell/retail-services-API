/* 
 * !D Cloud API
 *
 * !D Cloud is an RFID integration platform for retail stores. While we                                         provide core functionality for retail companies, a lot of functionality can be                                         added or extended by 3rd party developers. We encourage you to do so!
 *
 * OpenAPI spec version: v1
 * Contact: info@nedap-idcloud.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Nedap.Retail.Api.Oauth.Client;
using Nedap.Retail.Api.Oauth.Api;
using Nedap.Retail.Api.Oauth.Model;

namespace Nedap.Retail.Api.Oauth.Test
{
    /// <summary>
    ///  Class for testing AccessTokenResolverApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class AccessTokenResolverApiTests
    {
        private AccessTokenResolverApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new AccessTokenResolverApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AccessTokenResolverApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AccessTokenResolverApi
            //Assert.IsInstanceOfType(typeof(AccessTokenResolverApi), instance, "instance is a AccessTokenResolverApi");
        }

        
        /// <summary>
        /// Test Resolve
        /// </summary>
        [Test]
        public void ResolveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string grantType = null;
            //string clientId = null;
            //string clientSecret = null;
            //var response = instance.Resolve(grantType, clientId, clientSecret);
            //Assert.IsInstanceOf<OAuthResponse> (response, "response is OAuthResponse");
        }
        
    }

}
