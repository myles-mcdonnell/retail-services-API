/* 
 * !D Cloud API
 *
 * !D Cloud is an RFID integration platform for retail stores. While we                                         provide core functionality for retail companies, a lot of functionality can be                                         added or extended by 3rd party developers. We encourage you to do so!
 *
 * OpenAPI spec version: v1
 * Contact: info@nedap-idcloud.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Nedap.Retail.Api.Idcloud.Client;
using Nedap.Retail.Api.Idcloud.Api;
using Nedap.Retail.Api.Idcloud.Model;

namespace Nedap.Retail.Api.Idcloud.Test
{
    /// <summary>
    ///  Class for testing RfidCountApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class RfidCountApiTests
    {
        private RfidCountApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new RfidCountApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of RfidCountApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' RfidCountApi
            //Assert.IsInstanceOfType(typeof(RfidCountApi), instance, "instance is a RfidCountApi");
        }

        
        /// <summary>
        /// Test List
        /// </summary>
        [Test]
        public void ListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string location = null;
            //DateTime? fromEventTime = null;
            //DateTime? untilEventTime = null;
            //var response = instance.List(location, fromEventTime, untilEventTime);
            //Assert.IsInstanceOf<List<StockSummary>> (response, "response is List<StockSummary>");
        }
        
        /// <summary>
        /// Test Retrieve
        /// </summary>
        [Test]
        public void RetrieveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string location = null;
            //List<string> gtins = null;
            //DateTime? time = null;
            //bool? includeArticles = null;
            //var response = instance.Retrieve(location, gtins, time, includeArticles);
            //Assert.IsInstanceOf<StockResponse> (response, "response is StockResponse");
        }
        
    }

}
